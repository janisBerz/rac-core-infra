# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

variables:
  buildConfiguration: 'Release'
  poolImageName: 'windows-latest'
  System.Debug: 'false'
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  projectName: 'rac-voting-demo'
  webAppName: '$(projectName)'
  azFunctionName: '$(projectName)-func-$(Environment.Name)'
  azureSubscriptionName: 'DevTest'
  resourceGroupName: '$(WebAppName)'
  resourcename: '$(resourceGroupName)'
  armTemplateParameters: '-webAppName $(webAppName)-$(Environment.Name) -azFunctionName $(azFunctionName)'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: '$(poolImageName)'
    steps:
    - task: AzureResourceGroupDeployment@2
      displayName: 'Provision Infrastructure'
      inputs:
        azureSubscription: $(azureSubscriptionName)
        resourceGroupName: '$(resourceGroupName)-$(Environment.Name)'
        location: 'West Europe'
        csmFile: $(Pipeline.Workspace)/templates/deployment/deployment.json
        csmParametersFile: $(Pipeline.Workspace)/templates/deployment/deployment.parameters.json
        overrideParameters: '$(armTemplateParameters)'
        deploymentMode: 'Validation'

    - task: DotNetCoreCLI@2
      displayName: 'DotNet Core Restore'
      inputs:
        command: restore
        projects: '**/*.sln'

    - task: DotNetCoreCLI@2
      displayName: 'DotNet Core Build'
      inputs:
        command: build
        projects: '**/*.sln'
        arguments: '--configuration $(buildConfiguration) --no-restore'

    - task: DotNetCoreCLI@2
      displayName: 'DotNet Core Package WebApp'
      inputs:
        command: publish
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory) --no-build'
        projects: '**/*.sln'
        zipAfterPublish: true

    - task: DotNetCoreCLI@2
      displayName: 'DotNet Core Package Function'
      inputs:
        command: publish
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory) --no-build'
        projects: '**/*Function.csproj'
        publishWebProjects: false
        zipAfterPublish: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifacts'
      inputs:
        path: $(build.artifactstagingdirectory)
        artifact: App

    - task: PublishPipelineArtifact@1
      displayName: 'Publish ARM templates'
      inputs:
        path: $(System.DefaultWorkingDirectory)/templates
        artifact: templates


- stage: Deployment_Dev
  jobs:
  - deployment: deployment_dev
    displayName: 'Dev'
    pool:
      vmImage: 'windows-2019'
    environment: 'dev'
    #condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/feature'))
    strategy:
      runOnce:
        deploy:
          steps:
          - template: deployment.yml

# - stage: Deployment_Test
#   jobs:
#   - deployment: deployment_test
#     displayName: 'Test'
#     pool:
#       vmImage: 'windows-2019'
#     environment: 'test'
#     condition: |
#       and(succeeded(),
#       eq(variables['Build.Reason'], 'PullRequest'))
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - template: deployment.yml
